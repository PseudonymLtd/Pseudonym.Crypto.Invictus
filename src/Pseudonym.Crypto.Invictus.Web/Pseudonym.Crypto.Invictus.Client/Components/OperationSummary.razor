@inject IAppState AppState
@inject IUserSettings UserSettings

<div class="container-fluid" style="max-width: none; padding-left: 0px; padding-right: 0px">
    <div class="row justify-content-center row-cols-1 row-cols-sm-2 row-cols-md-4">
        <div class="col py-1">
            <small style="font-weight: bold;">Token</small>
            <div>
                <TransferType Type="@Operation.TransferAction" />
                <img src="@Operation.Contract.ImageLink.OriginalString" onerror="this.attributes.getNamedItem('src').value = 'images/default.png'" width="24" height="24" style="margin: 0 auto;" />
                <span>@Operation.Contract.Symbol</span>
                @if (Operation.Quantity != default)
                {
                    <small style="font-size: 10px; vertical-align: top; font-weight: bold;">
                        &times; <LargeNumber Value="Operation.Quantity" Decimals="2" />
                    </small>
                }
            </div>
        </div>
        <div class="col py-1">
            <small style="font-weight: bold;">@Operation.Type</small>
            <div>
                @if (string.IsNullOrWhiteSpace(Operation.Address))
                {
                    <EthAddress Address="@Operation.Sender" />
                    <EthAddress Address="@Operation.Recipient" />
                }
                else
                {
                    <EthAddress Address="@Operation.Address" />
                }
            </div>
        </div>
        <div class="col py-1">
            @if (Operation.Quantity != default)
            {
                <small style="font-weight: bold;">Value (@UserSettings.CurrencyCode.GetSymbol())</small>
                <div>
                    <Money Value="@(Operation.PricePerToken * Operation.Quantity)" CurrencyCode="UserSettings.CurrencyCode" />
                </div>
            }
        </div>
        <div class="col py-1" style="margin-top: auto; margin-bottom: auto;">
            <TokenExplorer Symbol="@Operation.Contract.Symbol" Link="Operation.Contract.Link" ImageLink="Operation.Contract.ImageLink" MarketLink="Operation.Contract.MarketLink" />
        </div>
    </div>
</div>

@code {

    [Parameter]
    public BusinessOperation Operation { get; set; }

    protected override void OnInitialized()
    {
        AppState.Assign(StateHasChanged);
    }
}
