@inject IUserSettingsHandle UserSettingsHandle
@inject IAppState AppState

<div class="dropdown">
    <button class="btn btn-danger dropdown-toggle selector" type="button" id="@Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-describedby="currencyCodeHelp" style="width: 350px;">
        @UserSettingsHandle.Settings.CurrencyCode.GetDescription()
    </button>
    <div class="dropdown-menu selector" aria-labelledby="@Id" style="overflow-y: scroll; max-height: 250px; z-index: 10000; width: 350px;">
        @foreach (var item in Enum.GetValues(typeof(CurrencyCode)).Cast<CurrencyCode>().OrderBy(x => x.GetDescription()))
        {
            <span class="dropdown-item text-mob-xs" @onclick="@(async (e) => await ChangeCurrencyCodeAsync(item))">
                <img src="images/locale/@($"{item.ToString()}.png")" class="flag mr-1" width="50" height="30">
                @item.GetDescription()
            </span>
        }
    </div>
</div>

@code {

    private readonly string Id;

    public CurrencySelector()
    {
        Id = $"CS-{Guid.NewGuid()}";
    }

    protected override void OnInitialized()
    {
        AppState.Assign(StateHasChanged);
    }

    private async Task ChangeCurrencyCodeAsync(CurrencyCode currencyCode)
    {
        Console.WriteLine($"Changing currency to CurrencyCode: {currencyCode}");

        await UserSettingsHandle.UpdateAsync(us => us.CurrencyCode = currencyCode);

        AppState.NotifyStateChanged();
    }
}
