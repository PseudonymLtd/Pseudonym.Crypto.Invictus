@inject IAppState AppState

<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <div class="media" style="margin-top: auto; margin-bottom: auto; padding-bottom: 6px; position: relative;">
            <img src="images/funds/@($"{Fund.Token.Symbol}.png")" class="mr-3" alt="@Fund.DisplayName">
            <h1 class="display-4">@Fund.DisplayName</h1>
            <div class="text-align-mob-center" style="margin-left: 5px;">
                <ValueBubble Type="Nav" Pricing="Fund.Nav" Decimals="2" Symbol="Fund.Token.Symbol" />
                @if (Fund.Market.IsTradeable)
                {
                    <span style="padding-left: 5px;">
                        <ValueBubble Type="Mkt" Pricing="Fund.Market" Decimals="2" />
                    </span>
                }
            </div>
            <div style="position: absolute; display: inline-block; right: 0; left: auto; top: 0; height: 20px;">
                <a class="badge neutral" href="@Fund.Links.Lite" target="_blank" style="">Lite</a>
                <a class="badge @Fund.Token.Symbol.ToString().ToLower()" href="@Fund.Links.Fact" target="_blank">Fact</a>
            </div>
        </div>
        <p class="lead text-mob-md text-justify text-sm-left">@Fund.Description</p>
        <div class="media text-center text-sm-left" style="padding-top: 12px; padding-bottom: 12px; border: 1px solid transparent;">
            @Content
        </div>
        @if (ShowGraph)
        {
            @Chart
        }
        @if (Link != null)
        {
            <a href="@Link.OriginalString"
               class="btn btn-primary btn-lg @Fund.Token.Symbol.ToString().ToLower() mx-auto mr-sm-0"
               role="button"
               style="display: block; max-width: 150px;">Explore</a>
        }
    </div>
</div>

@code {

    [Parameter]
    public Uri Link { get; set; }

    [Parameter]
    public bool ShowGraph { get; set; }

    [Parameter]
    public RenderFragment Chart { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter]
    public ApiFund Fund { get; set; }

    protected override void OnInitialized()
    {
        AppState.Assign(StateHasChanged);
    }
}